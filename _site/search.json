[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Lachlan’s blog",
    "section": "",
    "text": "This is a blog …..\n\n\n\n\n\n\n\n\n  \n\n\n\n\nTidy data and ggplot2?\n\n\n\n\n\n\n\nnews\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\n\n\nNov 2, 2022\n\n\nLachlan Bourke\n\n\n\n\n\n\n  \n\n\n\n\nWelcome To My Blog\n\n\n\n\n\n\n\nnews\n\n\n\n\n\n\n\n\n\n\n\nOct 30, 2022\n\n\nTristan O’Malley\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this blog"
  },
  {
    "objectID": "posts/post-with-code/index.html",
    "href": "posts/post-with-code/index.html",
    "title": "Post With Code",
    "section": "",
    "text": "This is a post with executable code.\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Welcome To My Blog",
    "section": "",
    "text": "This is the first post in a Quarto blog. Welcome!\n\nSince this post doesn’t specify an explicit image, the first image in the post will be used in the listing page of posts."
  },
  {
    "objectID": "Workshop_notes.html",
    "href": "Workshop_notes.html",
    "title": "Workshop notes",
    "section": "",
    "text": "For the tutorial this workshop follows:\nBrisbane Geospatial Community of Practice - Build a blog with Quarto, git, and RStudio (brisbane-geocommunity.netlify.app)\n\nSource and visual tabs. Use the visula tab and see how it changes the source tab, Visual is way easier since can edit text and stuff without the code.\nusethis::use_github() in the terminal. This code is used to push things to github. First you must commit them (right hand top git tab) and then push. Can let commits build up and then push a few commits at a time.\n\n\n\nAfter you make changes you can then commit and push things. If you don’t want to use the push code, just hit green arrow to push (right hand side top git tab).\n\n\n\nOpened .gitignore file and typed Workshop_notes.qmd. This file won’t be shown on github now, along with all the defaults already in their (passwords etc.)\n\n\n\nSet up netlify. Have a website.\nWhen make changes you must render, then commit and push. Then the site will update. Specifically netlify is reading off the _site folder. So at least push this.\nCan also fork things. You get other peoples code. Can then clone to get it onto your computer and then ask permission to send it back to the person (maybe you fixed a website typo or something)"
  },
  {
    "objectID": "posts/Tidy_data/index.html",
    "href": "posts/Tidy_data/index.html",
    "title": "Tidy data and ggplot2?",
    "section": "",
    "text": "Hi everyone! In this post we are going to talk about the tidyverse, specifically how to get our data into the tidy format and why this matters when using ggplot2! Are you ready to enter the tidyverse? First things first you will need to install the package “tidyverse” and then load it in you r script using the following code.\n\nlibrary(tidyverse)\n\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ ggplot2 3.4.0      ✔ purrr   0.3.5 \n✔ tibble  3.1.8      ✔ dplyr   1.0.10\n✔ tidyr   1.2.1      ✔ stringr 1.5.0 \n✔ readr   2.1.3      ✔ forcats 0.5.2 \n\n\nWarning: package 'ggplot2' was built under R version 4.2.2\n\n\nWarning: package 'stringr' was built under R version 4.2.2\n\n\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n\n\nSo what is the tidyverse? Simply, ….. For more detailed information on the tidyverse and how to use it to its full advantage, see….. . One of the packages is ggplot2 - an amazing package that can be used to produce figures in R (think bar graphs, line graphs, scatter plots, etc.). For more information on this package see. Note, that this blog post isn’t an introduction to tidyverse or ggplot2, but rather highlights the importance making figures with tidy data. It is expected you have some background in these packages.\nSo, why does tidy data matter? Well first and foremost, and the reason for this blog post, it will make your life a lot easier when making figures in ggplot2 (a package that is loaded when you load the tidyverse).\n\nlibrary(tidyverse)\nvenom_data<-read_csv(\"venom_data.csv\")\n\nRows: 8 Columns: 13\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\ndbl (13): Concentration, BC_1, BC_2, BC_3, BC_ICP1, BC_ICP2, BC_ICP3, BC_But...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nvenom_data\n\n# A tibble: 8 × 13\n  Concentrat…¹  BC_1  BC_2  BC_3 BC_ICP1 BC_ICP2 BC_ICP3 BC_Bu…² BC_Bu…³ BC_Bu…⁴\n         <dbl> <dbl> <dbl> <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>\n1       20      14.3  14.1  14.1    15.9    16.1    16.4    21.3    21.2    20.7\n2       10      16.3  16.3  16.2    19.1    19.5    19.1    35      34.1    33.4\n3        4      19.5  19.5  19.5    25      25.6    25.5    59.7    61.1    61.1\n4        1.66   24.1  23.5  23.1    33.3    32.8    33.1    88.2    90.6    88  \n5        0.66   29.5  29.5  28.6    44.7    44      42.7   125     131.    129. \n6        0.25   36.5  37.3  36.2    58      59.6    59.2   179.    187     186. \n7        0.125  43.3  43.8  42.4    68.9    71.8    71.8   220.    228.    231. \n8        0.05   81    85.8  78.1   118.    110.    121.    272     263     277. \n# … with 3 more variables: BC_ATri1 <dbl>, BC_ATri2 <dbl>, BC_ATri3 <dbl>, and\n#   abbreviated variable names ¹​Concentration, ²​BC_Butantan1, ³​BC_Butantan2,\n#   ⁴​BC_Butantan3\n\n\n\nvenom_data_summarised <- venom_data %>% #Calculate standard deviation for each venom and venom + antivenom at each concentration\n  rowwise() %>% \n  mutate(BC_mean = (BC_1+BC_2+BC_3)/3, \n         BC_ICP_mean = (BC_ICP1+BC_ICP2+BC_ICP3)/3, \n         BC_Butantan_mean = (BC_Butantan1+BC_Butantan2+BC_Butantan3)/3,\n         BC_ATri_mean = (BC_ATri1 + BC_ATri2 + BC_ATri3)/3) %>% \n  mutate(BC_sd = sd(c_across(BC_1:BC_3)),\n    BC_ICP_sd = sd(c_across(BC_ICP1:BC_ICP3)),\n    BC_Butantan_sd = sd(c_across(BC_Butantan1:BC_Butantan3)),\n    BC_ATri_sd = sd(c_across(BC_ATri1:BC_ATri3)))%>%\n  select(Concentration,BC_mean, BC_ICP_mean, BC_Butantan_mean, BC_ATri_mean, \n         BC_sd, BC_ICP_sd, BC_Butantan_sd, BC_ATri_sd)\n\nNow….\n\nwindowsFonts(Times=windowsFont(\"Times New Roman\")) \n\ncolors <- c(\"Venom\"=\"red\", \"Venom + ICP antivenom\"=\"green\", \"Venom + Butantan antivenom\" = \"brown\", \n            \"Venom + ATri antivenom\" = \"blue\")\n\nBC_graph <- ggplot(venom_data_summarised, aes(x=Concentration)) +\n  geom_line(aes(y=BC_mean, color = \"Venom\"), linewidth = 1) +\n  geom_point(aes(y=BC_mean, colour = \"Venom\"), size = 2)+\n  geom_line(aes(y=BC_ICP_mean, color = \"Venom + ICP antivenom\"), linewidth = 1) +\n  geom_point(aes(y=BC_ICP_mean, color = \"Venom + ICP antivenom\"), size = 2) +\n  geom_line(aes(y=BC_Butantan_mean, color = \"Venom + Butantan antivenom\"), linewidth = 1) +\n  geom_point(aes(y=BC_Butantan_mean, color = \"Venom + Butantan antivenom\"), size = 2) +\n  geom_line(aes(y=BC_ATri_mean, color = \"Venom + ATri antivenom\"), linewidth = 1) +\n  geom_point(aes(y=BC_ATri_mean, color = \"Venom + ATri antivenom\"), size = 2) +\n  theme_classic() + #theme\n  theme(plot.margin = margin(1,1,1.5,1.2, \"cm\"), #margins\n        axis.text = element_text(face = \"bold\", color=\"black\", family = \"Times\", size = 12), # Axis text formatting\n        axis.title = element_text(face = \"bold\", color=\"black\", family = \"Times\", size = 14),# Axis title text formatting\n        axis.line = element_line(linewidth=1), axis.ticks = element_line(linewidth = 1), # Axis line and tick size\n        legend.title = element_text(face = \"bold\", family = \"Times\", size = 12),\n        legend.text = element_text(face = \"bold\", family = \"Times\"))+\n  scale_x_continuous(trans = \"log10\", breaks = c(0.2, 2, 20), expand = expansion(mult = c(0,0.01)))+ #log scale, breaks, and intercept of y and x axis = 0 (no gap before line graph)\n  scale_y_continuous(expand = c(0,0), limits = c(0, 400)) + #limits\n  labs(x = \"Concentration (μg/mL)\", y = \"Clotting time (s)\", color = \"Legend\")+\n  scale_color_manual(values = colors) +\n  geom_errorbar(aes(ymin=BC_mean-BC_sd, ymax=BC_mean+BC_sd), width = 0.02, size = 0.8, color = \"red\") +\n  geom_errorbar(aes(ymin=BC_ICP_mean-BC_ICP_sd, ymax=BC_ICP_mean+BC_ICP_sd), width = 0.02, size = 0.8, color = \"green\") +\n  geom_errorbar(aes(ymin=BC_Butantan_mean-BC_Butantan_sd, ymax=BC_Butantan_mean+BC_Butantan_sd), width = 0.02, size = 0.8, color = \"brown\") +\n  geom_errorbar(aes(ymin=BC_ATri_mean-BC_ATri_sd, ymax=BC_ATri_mean+BC_ATri_sd),width = 0.02, size = 0.8, color = \"blue\") \n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\nBC_graph"
  }
]